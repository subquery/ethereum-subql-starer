# NOTE THIS FILE IS HAS BEEN DEPRECATED AND REPLACED BY THE TYPESCRIPT DEFINITION (PROJECT.TS)
# The CLI will automatically look for the project.ts as priority, if you want to ensure you
# use the project manifest, please delete project.ts

specVersion: "1.0.0"

name: "crabada-nft"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-ethereum"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project indexes all Crabada NFTs on Avalanche's C-chain"
repository: "https://github.com/subquery/subquery-example-avalanche-crabada-nft"

schema:
  file: "./schema.graphql"

network:
  # chainId is the EVM Chain ID, for Avalanche-C chain is 43114
  # https://chainlist.org/chain/43114
  chainId: "43114"
  # These endpoint(s) should be non-pruned archive nodes
  # We recommend providing more than one endpoint for improved reliability, performance, and uptime
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # We suggest providing an array of endpoints for increased speed and reliability
  endpoint:
    - https://avalanche.api.onfinality.io/public/ext/bc/C/rpc
  # Recommended to provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://api.subquery.network/sq/subquery/avalanche-dictionary"

dataSources:
  - kind: ethereum/Runtime # We use ethereum runtime since Avalanche is compatible
    startBlock: 30128346 # First mint https://snowtrace.io/tx/0x17336f3699f922c245663a50fba2d857c368f6c8137024b980cc2e7042e4df87
    options:
      # Must be a key of assets
      abi: crabada
      ## Crabada Legacy Contract https://snowtrace.io/address/0xCB7569a6Fe3843c32512d4F3AB35eAE65bd1D50c
      address: "0xCB7569a6Fe3843c32512d4F3AB35eAE65bd1D50c"
    assets:
      crabada:
        file: "./abis/crabada.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleERC721
          kind: ethereum/LogHandler
          filter:
            topics:
              - Transfer(address from, address to, uint256 tokenId)
        - handler: handleNewCrab
          kind: ethereum/LogHandler
          filter:
            topics:
              - NewCrab(address account, uint256 id, uint256 daddyId, uint256 mommyId, uint256 dna, uint64 birthday, uint8 breedingCount)
