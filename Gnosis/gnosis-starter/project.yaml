# NOTE THIS FILE IS HAS BEEN DEPRECATED AND REPLACED BY THE TYPESCRIPT DEFINITION (PROJECT.TS)
# The CLI will automatically look for the project.ts as priority, if you want to ensure you
# use the project manifest, please delete project.ts

specVersion: "1.0.0"

name: "gnosis-subql-starter"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-ethereum"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your new Gnosis SubQuery project"
repository: "https://github.com/subquery/ethereum-subql-starter"

schema:
  file: "./schema.graphql"

network:
  # chainId is the EVM Chain ID, for Gnosis this is 100
  # https://chainlist.org/chain/100
  chainId: "100"
  # These endpoint(s) should be non-pruned archive nodes
  # We recommend providing more than one endpoint for improved reliability, performance, and uptime
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # We suggest providing an array of endpoints for increased speed and reliability
  endpoint: [
      # "https://gnosis.api.onfinality.io/public",
      # "https://gnosischain-rpc.gateway.pokt.network",
      # "https://opt-mainnet.g.alchemy.com/v2/demo",
      "https://rpc.gnosischain.com",
    ]
  # Recommended to provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://api.subquery.network/sq/subquery/gnosis-dictionary"

dataSources:
  - kind: ethereum/Runtime # We use ethereum runtime since Gnosis is a layer-2 that is compatible
    startBlock: 11566752 # The first block with a USDT transaction
    options:
      # Must be a key of assets
      abi: erc20
      address: "0xE2e73A1c69ecF83F464EFCE6A5be353a37cA09b2" # this is the contract address for ChainLink Token on xDai on Gnosis https://gnosisscan.io/token/0xe2e73a1c69ecf83f464efce6a5be353a37ca09b2
    assets:
      erc20:
        file: "./abis/erc20.abi.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleTransaction
          kind: ethereum/TransactionHandler # We use ethereum handlers since Gnosis is EVM compatible
          filter:
            ## The function can either be the function fragment or signature
            # function: '0x095ea7b3'
            # function: '0x7ff36ab500000000000000000000000000000000000000000000000000000000'
            function: approve(address spender, uint256 rawAmount)
        - handler: handleLog
          kind: ethereum/LogHandler # We use ethereum handlers since Gnosis is EVM compatible
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - Transfer(address indexed from, address indexed to, uint256 amount)
              # address: "0x60781C2586D68229fde47564546784ab3fACA982"
